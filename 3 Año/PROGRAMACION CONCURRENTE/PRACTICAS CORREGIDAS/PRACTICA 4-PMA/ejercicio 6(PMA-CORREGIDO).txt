ejercicio 6. Se debe modelar una casa de Comida Rápida, en el cual trabajan 2 cocineros y 3
vendedores. Además, hay C clientes que dejan un pedido y quedan esperando a que se lo
alcancen.
Los pedidos que hacen los clientes son tomados por cualquiera de los vendedores y se lo
pasan a los cocineros para que realicen el plato. Cuando no hay pedidos para atender, los
vendedores aprovechan para reponer un pack de bebidas de la heladera (tardan entre 1 y 3
minutos para hacer esto).
Repetidamente cada cocinero toma un pedido pendiente dejado por los vendedores, lo
cocina y se lo entrega directamente al cliente correspondiente.
Nota: maximizar la concurrencia.


//definicion de canales
chan Quiero_Comida(int, texto)
chan Recibi_Comida[N](texto)
chan SiguienteVendedor[3](int, texto)
chan PedidoVendedor(int)
chan Cocina(id, texto)

process Cliente [id: 1..N] {
	/llega cliente
	send Quiero_Comida(id, comida)
	receive Recibi_Comida[id](comida)
}

process Vendedor [id: 1..3] {
	int idC
	int x
	texto comida

	while (true) {
		send PedidoVendedor(id)
		receive SiguienteVendendor[id](idC, comida)
		if (comida != “VACIO”) {
			send Cocina (idC, comida)
		}
		else {
			x = Random (60, 180)
			delay(x) /reponer bebida
		}
	}
}

process Coordi_Vendedores [] {
	int idC
	int idV
	texto comida

	while (true) {
		receive PedidoVendedor(idV)
		if (not empty (Quiero_Comida)) {
			receive Quiero_Comida(idC, comida)
			send SiguienteVendedor[idV](idC, comida)
		}
		else {
			comida = “VACIO”
			send SiguienteVendedor[idV](comida)
	}
}

process Cocinero [id: 1..2] {
	int idC
	texto comida

	while (true) {
			receive Cocina(idC, comida)
			/prepara comida
			send Recibi_Comida[idC](comida)
		}
	}
}

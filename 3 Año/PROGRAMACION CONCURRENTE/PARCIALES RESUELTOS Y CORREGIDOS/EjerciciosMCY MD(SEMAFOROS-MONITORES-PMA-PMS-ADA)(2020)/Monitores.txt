Resolver con MONITORES la siguiente situación. Simular la atención en un
corralón de materiales donde hay 4 empleados para atender a N clientes de acuerdo al
orden de llegada. Cuando el cliente llega espera a que alguno de los empleados lo
llame, se dirige hasta el escritorio del mismo y le entrega el listado de materiales que
debe comprar, luego queda esperando a que terminen de atenderlo y el empleado le
entregue la factura. Nota: maximizar la concurrencia; suponga que existe una función
HacerFactura()llamada por el empleado que simula la atención.
----------------------------------------------------------------------------------------------------
como resolver? definimos un monitor corral y empleado
----------------------------------------------------------------------------------------------------
Monitor Corralon {
queue colaC;
int numEmpleado[N];
cond esperaC, esperaE;
----------------------------------------------------------------------------------------------------------
Procedure Encolar (int C, OUT int E) {
push(colaC, C);
signal(esperaE);
wait (esperaC);
E = numEmpleado[C];
};

Procedure Siguiente(int idE) {
int idC;
while (empty(colaC)) wait(esperaE);
pop(colaC, idC);
signal(esperaC) // PREGUNTAR??
numEmpleado[idC] = idE;
};
}
----------------------------------------------------------------------------------------------------

Monitor Escritorio[id: 0..3] {
text pedido, factura;
bool listo = false;
cond espera, esperaE;
----------------------------------------------------------------------------------------
Procedure Atender (text P, OUT text F) {
pedido = P;
listo = true;
signal (esperaE);
wait (esperaC);
F = factura;
signal (esperaE);
};

Procedure VerPedido (OUT text P) {
if (not listo) wait (esperaE);
listo = false;
P = pedido;
};

Procedure DarFactura (text F) {
factura = F;
signal (esperaC);
wait (esperaE);
};
}
------------------------------------------------------------------------------------------

Process Cliente[id: 0..N-1] {
text factura, pedido;
int idE;
Corralon.Encolar(id, idE);
Escritorio[idE].Atender(pedido, factura);
};
---------------------------------------------------
Process Empleado[id: 0..3] {
text factura, pedido;
while (true) {
Corralon.Siguiente(id);
Escritorio[id].VerPedido(pedido);
factura = HacerFactura(pedido);
Escritorio[id].DarFactura(factura);
}
};
-----------------------------------------------